window.storyFormat({"name":"Engleri","version":"0.1.0","description":"A Twine story format that uses Inkle's Ink language","proofing":false,"license":"MIT","setup":"","source":"<!DOCTYPE html><html><head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta charset=\"utf-8\">\n        <title>{{STORY_NAME}}</title>\n        <style>\n/* Give ourselves some decent defaults. */\n\nbody {\n\tfont: 1.5em \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\tcolor: hsl(0, 0%, 13%);\n    text-align: center;\n}\n\ntw-icon {\n\tfont-size: 2em;\n\tcursor: pointer;\n}\n\ntw-story {\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tmin-height: 100%;\n\tfont-size: 1.5em;\n\tline-height: 1.5em;\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-top: 1em;\n}\n\ntw-passage {\n\twidth: 90%;\n\tdisplay: block;\n}\n\ntw-link, a {\n\tcolor: #00a;\n\ttext-decoration-color: #00a;\n\tcursor: pointer;\n\ttext-decoration: underline;\n}\n\ntw-link:hover, tw-icon:hover, a:hover {\n\tcolor: #44f;\n\ttext-decoration-color: #44f;\n\ttext-decoration: underline;\n}\n\ntw-storydata {\n\tdisplay: none;\n}\n        </style>\n    </head>\n    <body>\n        {{STORY_DATA}}\n\t\t<tw-story>\n\t\t\t<tw-passage class=\"passage\"></tw-passage>\n\t\t</tw-story>\n        <script>\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n})((function () { 'use strict';\n\n    var Passage = (function () {\n        function Passage(name, tags, source) {\n            name !== null && name !== void 0 ? name : (name = 'Default');\n            tags !== null && tags !== void 0 ? tags : (tags = []);\n            source !== null && source !== void 0 ? source : (source = '');\n            this.name = name;\n            this.tags = tags;\n            this.source = source;\n            console.log(\"Passage '\".concat(this.name, \" source:\").concat(this.source));\n        }\n        Passage.prototype.renderLinks = function () {\n            var rules = [\n                [/\\[\\[(.+)(\\||-\\&gt;)(.+)\\]\\]/g, '<tw-link data-passage=\"$3\">$1</tw-link>'],\n                [/\\[\\[(.+)\\&lt;-(.+)?\\]\\]/g, '<tw-link data-passage=\"$1\">$2</tw-link>']\n            ];\n            var text = this.source;\n            rules.forEach(function (_a) {\n                var rule = _a[0], template = _a[1];\n                text = text.replaceAll(rule, template);\n            });\n            return text;\n        };\n        return Passage;\n    }());\n\n    var Utils = (function () {\n        function Utils() {\n        }\n        Utils.generateElements = function (html) {\n            var template = document.createElement('template');\n            template.innerHTML = html.trim();\n            return template.content.children;\n        };\n        Utils.addEventListener = function (eventName, eventHandler, selector) {\n            var wrappedHandler = function (e) {\n                if (!e.target || !(e.target instanceof Element))\n                    return;\n                var el = e.target.closest(selector);\n                if (el) {\n                    eventHandler.call(el, e);\n                }\n            };\n            document.addEventListener(eventName, wrappedHandler);\n            return wrappedHandler;\n        };\n        return Utils;\n    }());\n\n    var Story = (function () {\n        function Story() {\n            var _this = this;\n            var storydataElement = document.querySelector('tw-storydata');\n            if (storydataElement === null) {\n                throw new Error(\"Could not find '<tw-storydata>' element!\");\n            }\n            this.storyData = storydataElement;\n            this.name = this.storyData.getAttribute('name');\n            this.passages = [];\n            this.storyData.querySelectorAll('tw-passagedata').forEach(function (element) {\n                var tagsValue = element.getAttribute('tags');\n                var tags;\n                if (tagsValue !== '' && tagsValue) {\n                    tags = tagsValue.split(' ');\n                }\n                else {\n                    tags = [];\n                }\n                _this.passages.push(new Passage(element.getAttribute('name'), tags, element.innerHTML));\n            });\n            var workingPassage;\n            if (!(workingPassage = document.querySelector('tw-passage'))) {\n                throw new Error(\"Unable to locate <tw-passage>!\");\n            }\n            this.workingPassage = workingPassage;\n            this.currentPassage = null;\n        }\n        Story.prototype.start = function () {\n            var _this = this;\n            var passageIDStr = this.storyData.getAttribute('startnode');\n            if (!passageIDStr) {\n                throw new Error('Unable to fetch startnode value!');\n            }\n            var startingPassageID = parseInt(passageIDStr);\n            var startingPassage;\n            var startPassageName;\n            if (!(startingPassage = document.querySelector(\"[pid=\\\"\".concat(startingPassageID, \"\\\"]\")))\n                || !(startPassageName = startingPassage.getAttribute('name'))) {\n                throw new Error('Unable to fetch starting passage name!');\n            }\n            var passage = this.getPassageByName(startPassageName);\n            if (passage === null) {\n                throw new Error('Starting passage does not exist!');\n            }\n            this.currentPassage = passage;\n            this.workingPassage.setAttribute('tags', passage.tags.join(\" \"));\n            var passageSource = this.include(passage.name);\n            this.workingPassage.innerHTML = passageSource;\n            Utils.addEventListener('click', function (event) {\n                if (event.target instanceof Element) {\n                    var passageName = event.target.getAttribute('data-passage');\n                    _this.show(passageName);\n                }\n            }, 'tw-link[data-passage]');\n        };\n        Story.prototype.getPassagesByTag = function (tag) {\n            return this.passages.filter(function (p) {\n                return p.tags.includes(tag);\n            });\n        };\n        Story.prototype.getPassageByName = function (name) {\n            var passage = null;\n            var result = this.passages.filter(function (p) { return p.name === name; });\n            if (result.length !== 0) {\n                passage = result[0];\n            }\n            return passage;\n        };\n        Story.prototype.show = function (name) {\n            var _this = this;\n            var passage = this.getPassageByName(name);\n            if (passage === null) {\n                throw new Error(\"There is no passage with the name \".concat(name));\n            }\n            this.currentPassage = passage;\n            this.workingPassage.setAttribute('tags', passage.tags.join(\" \"));\n            var passageSource = this.include(passage.name);\n            this.workingPassage.innerHTML = passageSource;\n            Utils.addEventListener('click', function (event) {\n                if (event.target instanceof Element) {\n                    var passageName = event.target.getAttribute('data-passage');\n                    _this.show(passageName);\n                }\n            }, 'tw-link[data-passage]');\n        };\n        Story.prototype.include = function (name) {\n            var passage = this.getPassageByName(name);\n            if (passage === null) {\n                throw new Error('There is no passage with name ' + name);\n            }\n            var passageSource = passage.renderLinks();\n            return passageSource;\n        };\n        Story.prototype.renderPassageToSelector = function (passageName, selector) {\n            var passageSource = this.include(passageName);\n            var element = document.querySelector(selector);\n            if (element) {\n                element.innerHTML = passageSource;\n            }\n        };\n        Story.prototype.addPassage = function (name, tags, source) {\n            if (name === void 0) { name = ''; }\n            if (tags === void 0) { tags = []; }\n            if (source === void 0) { source = ''; }\n            var nameSearch = this.getPassageByName(name);\n            if (nameSearch !== null) {\n                throw new Error('Cannot add two passages with the same name!');\n            }\n            if (!Array.isArray(tags)) {\n                tags = [];\n            }\n            if (Object.prototype.toString.call(source) !== '[object String]') {\n                source = '';\n            }\n            this.passages.push(new Passage(name, tags, source));\n        };\n        Story.prototype.removePassage = function (name) {\n            if (name === void 0) { name = ''; }\n            this.passages = this.passages.filter(function (passage) {\n                return passage.name !== name;\n            });\n        };\n        Story.prototype.goto = function (name) {\n            if (name === void 0) { name = ''; }\n            var passage = this.getPassageByName(name);\n            if (passage === null) {\n                throw new Error(\"There is no passage with the name \".concat(name));\n            }\n            this.show(name);\n        };\n        return Story;\n    }());\n\n    window._story = new Story();\n    window._story.start();\n\n}));\n       </script>\n    \n</body></html>"});